name: Auto Grading

on:
  # pull_request:
  #   branches:
  #     - main
  pull_request_target:
    branches:
      - main

permissions:
  contents: read

jobs:
  config:
    name: 'Configure environment'
    runs-on: ubuntu-latest
    outputs:
      assignment: ${{ steps.get_variables.outputs.assignment_name }}
      assignment_schema: ${{ steps.get_variables.outputs.schema_name }}
      submission_changes: ${{ steps.changed-files-specific.outputs.any_changed }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Generate variables using GitHub context
        id: get_variables
        run: |
          assignment=$(basename "${{ github.event.repository.full_name }}")
          echo "Assignment: $assignment"
          echo "::set-output name=assignment_name::$assignment"
          schema="$(echo "$(basename "${{ github.repository }}")" | tr '-' '_')_${{github.event.number}}_test"
          echo "Test Schema: $schema"
          echo "::set-output name=schema_name::$schema"
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - name: Get changed files in the submission folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v44
        with:
          files: submission/**
          files_ignore: _app/**
      - name: Run step if any file(s) in the submission folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files-specific.outputs.all_changed_files }}
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: $ALL_CHANGED_FILES"
  deploy:
    name: 'Deploy application'
    runs-on: ubuntu-latest
    needs: [config]
    if: needs.config.outputs.submission_changes == 'true'
    env:
      SUBMISSION_DIR: 'submission'
      ASSIGNMENT: ${{ needs.config.outputs.assignment }}
      ASSIGNMENT_SCHEMA: ${{ needs.config.outputs.assignment_schema }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
      GITHUB_ORG: ${{ github.event.repository.owner.login }}
      GITHUB_REPO: ${{ github.repository }}
      SECRET_NAME: ${{ secrets.SECRET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Add GitHub environment variables to '.env' file
        run: env > .env
      - name: Build the Docker image
        run: docker build -t autograding .
      - name: Run the autograding application
        run: docker run --env-file .env --name autograding autograding
